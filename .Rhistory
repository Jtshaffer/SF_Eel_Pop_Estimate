min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- c(scale,shift)
return(vars)
}
scale_shift_fnct(Data)
vars<- scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- c(scale,shift)
return(vars)
}
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- c(scale,shift)
return(vars)
}
# Function to scale secondary axis
# scale_function <- function(x, scale, shift){
#   return ((x)*scale - shift)
# }
scale_function <- function(x, vars){
return ((x)*vars[1] - vars[2])
}
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- c(scale,shift)
list2env(vars,envir = ".GlobalEnv")
}
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Obtain USGS data for site of interest. URL to helpful page: https://waterdata.usgs.gov/blog/dataretrieval/
siteNo<- "11476500" # location code for Miranda
pCode <- "00060"  # Data type: Discharge
start.date <- "2022-10-31"
end.date <- as.character(today())
Miranda <- readNWISuv(siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date)
Miranda<- renameNWISColumns(Miranda)
#Join the Review data and USGS flow data
names(Data)
names(Miranda)
Data<- left_join(Data,Miranda, by = c("Date" = "dateTime"))
Data<-Data %>%
group_by(Month,Day) %>%
mutate(Daily.count = sum(Hnet,na.rm = T), Monthly.count = sum(Daily.count,na.rm = T))
scale.factor<- 10
# function to scale the axis automatically
max_first  <- max(Data$Daily.count)   # Specify max of first y axis
max_second <- max(Data$Flow_Inst) # Specify max of second y axis
min_first  <- min(Data$Daily.count)   # Specify min of first y axis
min_second <- min(Data$Flow_Inst) # Specify min of second y axis
# scale and shift variables calculated based on desired mins and maxes
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- c(scale,shift)
list2env(vars,envir = ".GlobalEnv")
}
scale_shift_fnct(Data)
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
list2env(vars,envir = ".GlobalEnv")
}
scale_shift_fnct(Data)
?list2env
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
list2env(vars,envir = "Null")
}
scale_shift_fnct(Data)
list2env(vars,envir = "Global")
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
list2env(vars,envir = "Global")
}
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
list2env(vars,envir = "Global")
}
scale_shift_fnct(Data)
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
list2env(vars,envir = .GlobalEnv)
}
scale_shift_fnct(Data)
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
list2env(vars,envir = .GlobalEnv)
}
scale_shift_fnct(Data)
ls()
?ls
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.list(c("scale"= scale,"shift"=shift))
return(vars)
}
scale_shift_fnct(Data)
vars<- scale_shift_fnct(Data)
vars[1]
# Function to scale secondary axis
# scale_function <- function(x, scale, shift){
#   return ((x)*scale - shift)
# }
scale_function <- function(x, vars){
return ((x)*vars[1] - vars[2])
}
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(., vars)))
plot
x + vars[1]
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(., Flow_Inst,vars)))
plot
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars)))
x + vars[1]
vars[1]
vars[1]
ars[1]
vars[1]
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.data.frame(c("scale"= scale,"shift"=shift))
return(vars)
}
vars<- scale_shift_fnct(Data)
vars[1]
vars<- as.data.frame("scale"= scale,"shift"=shift))
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.data.frame("scale"= scale,"shift"=shift))
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.data.frame("scale"= scale,"shift"=shift)
return(vars)
}
vars<- scale_shift_fnct(Data)
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.data.frame("scale"= scale,"shift"=shift)
return(vars)
}
vars<- scale_shift_fnct(Data)
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- as.data.frame("scale"= scale,"shift"=shift)
return(vars)
}
scale_shift_fnct(Data)
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- data.frame("scale"= scale,"shift"=shift)
return(vars)
}
vars<- scale_shift_fnct(Data)
vars[1]
vars[2]
# Function to scale secondary axis
# scale_function <- function(x, scale, shift){
#   return ((x)*scale - shift)
# }
scale_function <- function(x, vars){
return ((x)*vars[1] - vars[2])
}
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars)))
# Function to scale secondary axis
# scale_function <- function(x, scale, shift){
#   return ((x)*scale - shift)
# }
scale_function <- function(x, vars){
return ((x)*vars[1] - vars[2])
}
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
vars
Flow_Inst
View(Data)
library(tidyverse)
library(lubridate)
library(dataRetrieval)
?tidyverse
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Obtain USGS data for site of interest. URL to helpful page: https://waterdata.usgs.gov/blog/dataretrieval/
siteNo<- "11476500" # location code for Miranda
pCode <- "00060"  # Data type: Discharge
start.date <- "2022-10-31"
end.date <- as.character(today())
Miranda <- readNWISuv(siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date)
Miranda<- renameNWISColumns(Miranda)
#Join the Review data and USGS flow data
names(Data)
names(Miranda)
Data<- left_join(Data,Miranda, by = c("Date" = "dateTime"))
Data<-Data %>%
group_by(Month,Day) %>%
mutate(Daily.count = sum(Hnet,na.rm = T), Monthly.count = sum(Daily.count,na.rm = T))
scale.factor<- 10
# function to scale the axis automatically
max_first  <- max(Data$Daily.count)   # Specify max of first y axis
max_second <- max(Data$Flow_Inst) # Specify max of second y axis
min_first  <- min(Data$Daily.count)   # Specify min of first y axis
min_second <- min(Data$Flow_Inst) # Specify min of second y axis
# scale and shift variables calculated based on desired mins and maxes
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
scale_shift_fnct<- function(X){
max_first  <- max(X$Daily.count)   # Specify max of first y axis
max_second <- max(X$Flow_Inst) # Specify max of second y axis
min_first  <- min(X$Daily.count)   # Specify min of first y axis
min_second <- min(X$Flow_Inst) # Specify min of second y axis
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
vars<- data.frame("scale"= scale,"shift"=shift)
return(vars)
}
vars<- scale_shift_fnct(Data)
vars[1]
vars[2]
# Function to scale secondary axis
# scale_function <- function(x, scale, shift){
#   return ((x)*scale - shift)
# }
scale_function <- function(x, vars){
return ((x)*vars[1] - vars[2])
}
inv_scale_function <- function(x,vars){
return ((x + vars[1])/vars[2])
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
inv_scale_function(Flow_Inst,vars)
inv_scale_function(Data$Flow_Inst,vars)
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Data$Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
r
r
library(tidyverse)
library(lubridate)
library(dataRetrieval)
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Obtain USGS data for site of interest. URL to helpful page: https://waterdata.usgs.gov/blog/dataretrieval/
siteNo<- "11476500" # location code for Miranda
pCode <- "00060"  # Data type: Discharge
start.date <- "2022-10-31"
end.date <- as.character(today())
Miranda <- readNWISuv(siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date)
Miranda<- renameNWISColumns(Miranda)
#Join the Review data and USGS flow data
names(Data)
names(Miranda)
Data<- left_join(Data,Miranda, by = c("Date" = "dateTime"))
Data<-Data %>%
group_by(Month,Day) %>%
mutate(Daily.count = sum(Hnet,na.rm = T), Monthly.count = sum(Daily.count,na.rm = T))
scale.factor<- 10
# function to scale the axis automatically
max_first  <- max(Data$Daily.count)   # Specify max of first y axis
max_second <- max(Data$Flow_Inst) # Specify max of second y axis
min_first  <- min(Data$Daily.count)   # Specify min of first y axis
min_second <- min(Data$Flow_Inst) # Specify min of second y axis
# scale and shift variables calculated based on desired mins and maxes
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
scale_function <- function(x, scale, shift){
return ((x)*scale - shift)
}
inv_scale_function <- function(x, scale, shift){
return ((x + shift)/scale)
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Data$Flow_Inst,vars))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Flow_Inst,vars)))
plot
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Data$Flow_Inst,scale,shift))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Data$Flow_Inst,scale,shift)))
plot
Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Data$Flow_Inst,scale,shift))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(Data$Flow_Inst,scale,shift)))
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst, scale, shift))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(., scale, shift)))
plot
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst, scale, shift))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(., scale, shift)))
plot
Daily.movement<-Data %>%
group_by(Year,Month,Day) %>%
summarise(Net = sum(Hnet,na.rm = T))
Daily.movement %>%
filter(Month == 12) %>%
ggplot(aes(Day,Net))+
geom_point() +
# geom_line(data = Data, aes(y = Flow_Inst/scale.factor))+
# scale_y_continuous(sec.axis = sec_axis(~.*scale.factor, name="Discharge (m^3/s)")) +
theme_classic()
Monthly.movement<-Data %>%
group_by(Year,Month) %>%
summarise(Net = sum(Hnet,na.rm = T))
Monthly.movement
