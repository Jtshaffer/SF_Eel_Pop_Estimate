#Scenario 3: build in the adjustment for missing consecutive days in a month
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
Dat<- Dat %>%
mutate(hnet= Net*6)
#Adding in correction factor and daily net movement
pre.adj<- Dat %>%
group_by(Month,Day) %>%
summarise(Dailynet= sum(hnet,na.rm = T),missinghrs=sum(is.na(Net))) %>%
mutate(correctionfactor= missingvals/24)
#Scenario 3: build in the adjustment for missing consecutive days in a month
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
Dat<- Dat %>%
mutate(hnet= Net*6)
#Adding in correction factor and daily net movement
pre.adj<- Dat %>%
group_by(Month,Day) %>%
summarise(Dailynet= sum(hnet,na.rm = T),missinghrs=sum(is.na(Net))) %>%
mutate(correctionfactor= missingvals/24)
#Adding in correction factor and daily net movement
pre.adj<- Dat %>%
group_by(Month,Day) %>%
summarise(Dailynet= sum(hnet,na.rm = T),missinghrs=sum(is.na(Net))) %>%
mutate(correctionfactor= missinghrs/24)
# The daily counts adjusted for missing hours
post.adj<- pre.adj %>%
mutate(corected.dailynet = Dailynet + (Dailynet*correctionfactor))
pre.month.adj<- Dat %>%
group_by(Month) %>%
summarise(monthlynet= sum(corrected.dailynet,na.rm = T),missingvals=sum(is.na(Net))) %>%
mutate(correctionfactor= missingvals/length())
#Adding in the monthly correction factor and monthly net movement
pre.month.adj<- Dat %>%
group_by(Month) %>%
summarise(monthlynet= sum(corrected.dailynet,na.rm = T),missingvals=sum(is.na(Net))) %>%
mutate(correctionfactor= missingvals/length())
#Adding in the monthly correction factor and monthly net movement
pre.month.adj<- post.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(corrected.dailynet,na.rm = T),missingvals=sum(is.na(Net))) %>%
mutate(correctionfactor= missingvals/length())
# The daily counts adjusted for missing hours
post.adj<- pre.adj %>%
mutate(corected.dailynet = Dailynet + (Dailynet*correctionfactor))
View(post.adj)
?which
post.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(corrected.dailynet,na.rm = T), missingvals=sum(which(Net == 0)))
post.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(corected.dailynet,na.rm = T), missingvals=sum(which(Net == 0)))
post.adj %>%
group_by(Month) %>%
summarise(missingvals=sum(which(Net == 0)))
View(post.adj)
post.adj %>%
group_by(Month) %>%
summarise(missingvals=sum(which(corected.dailynet == 0)))
View(post.adj)
# The daily counts adjusted for missing hours
post.adj<- pre.adj %>%
mutate(corected.dailynet = Dailynet + (Dailynet*correctionfactor))
View(post.adj)
post.adj %>%
group_by(Month) %>%
summarise(missing_day_vals=sum(which(corected.dailynet == 0)))
post.adj %>%
group_by(Month) %>%
summarise(missing_day_vals=sum(which(corected.dailynet == 0.00)))
View(post.adj)
which(corected.dailynet == 0.00)
(which(post.adj$corected.dailynet == 0.00)
which(post.adj$corected.dailynet == 0.00)
which(post.adj$corected.dailynet == 0.00,useNames = F)
?count
count(which(post.adj$corected.dailynet == 0.00,useNames = F))
n(which(post.adj$corected.dailynet == 0.00,useNames = F))
?n
n_distinct(which(post.adj$corected.dailynet == 0.00,useNames = F))
?n_distinct
post.adj %>%
group_by(Month) %>%
summarise(missing_day_vals=n_distinct(which(post.adj$corected.dailynet == 0.00,useNames = F)))
post.adj %>%
group_by(Month) %>%
summarise(missing_day_vals=n_distinct(which(post.adj$corected.dailynet == 0.00)))
View(post.adj)
post.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(corected.dailynet,na.rm = T), missing_day_vals=n_distinct(which(post.adj$corected.dailynet == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day))
post.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(corected.dailynet,na.rm = T), missing_day_vals=n_distinct(which(post.adj$corected.dailynet == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day),cor.month.net= monthlynet+ (monthlynet*monthcorrectionfactor ) )
#Adding in the monthly correction factor and monthly net movement then correcting the monthly movement
pre.month.adj<- post.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(corected.dailynet,na.rm = T), missing_day_vals=n_distinct(which(post.adj$corected.dailynet == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day),cor.month.net= monthlynet+ (monthlynet*monthcorrectionfactor ) )
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
Dat<- Dat %>%
mutate(hnet= Net*6)
View(Dat)
#Adding in correction factor and daily net movement and then correcting the daily net movement
day.adj<- Dat %>%
group_by(Month,Day) %>%
summarise(Dailynet= sum(hnet,na.rm = T),missinghrs=sum(is.na(Net))) %>%
mutate(correctionfactor= missinghrs/24,corected.dailynet = Dailynet + (Dailynet*correctionfactor))
View(day.adj)
#Adding in correction factor and daily net movement and then correcting the daily net movement
day.adj<- Dat %>%
group_by(Month,Day) %>%
summarise(Dailynet= sum(hnet,na.rm = T),missinghrs=sum(is.na(Net))) %>%
mutate(daycorrectionfactor= missinghrs/24,cor.day.net = Dailynet + (Dailynet*correctionfactor))
#Adding in correction factor and daily net movement and then correcting the daily net movement
day.adj<- Dat %>%
group_by(Month,Day) %>%
summarise(Dailynet= sum(hnet,na.rm = T),missinghrs=sum(is.na(Net))) %>%
mutate(daycorrectionfactor= missinghrs/24,cor.day.net = Dailynet + (Dailynet*daycorrectionfactor))
View(day.adj)
#Adding in the monthly correction factor and monthly net movement then correcting the monthly movement
month.adj<- day.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(cor.day.net,na.rm = T), missing_day_vals=n_distinct(which(post.adj$cor.day.net == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day),cor.month.net= monthlynet+ (monthlynet*monthcorrectionfactor ) )
#Adding in the monthly correction factor and monthly net movement then correcting the monthly movement
month.adj<- day.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(cor.day.net,na.rm = T), missing_day_vals=n_distinct(which(cor.day.net == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day),cor.month.net= monthlynet+ (monthlynet*monthcorrectionfactor ) )
View(month.adj)
#Adding in the monthly correction factor and monthly net movement then correcting the monthly movement
month.adj<- day.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(cor.day.net,na.rm = T), missing_day_vals= n_distinct(which(cor.day.net == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day), cor.month.net= monthlynet + (monthlynet*monthcorrectionfactor ) )
View(month.adj)
#Adding in the monthly correction factor and monthly net movement then correcting the monthly movement
month.adj<- day.adj %>%
group_by(Month) %>%
summarise(monthlynet= sum(cor.day.net,na.rm = T), missing_day_vals= n_distinct(which(cor.day.net == 0.00))) %>%
mutate(monthcorrectionfactor= missing_day_vals/length(Day), cor.month.net= round(monthlynet + (monthlynet*monthcorrectionfactor ) ))
View(month.adj)
# Scenario 1: if there is an NA then take the average of the net movement 24 hours prior and 24 hours after  # Step 1
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- sapply(Dat[,3],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
Dat<- Dat %>%
mutate(hnet= Net*6)
View(Dat)
# Accounting for single hours down
Dat$new.net<- sapply(Dat[,Net],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
View(Dat)
# Accounting for single hours down
Dat$new.net<- sapply(Dat[,'Net'],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
# Accounting for single hours down
Dat$new.Net<- sapply(Dat[,'Net'],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
# Accounting for single hours down
Dat$new.Net<- sapply(Dat[,'Net'],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
View(Dat)
View(Dat)
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
# Accounting for single hours down
Dat$new.Net<- sapply(Dat[,'Net'],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
# Scenario 1: if there is an NA then take the average of the net movement 24 hours prior and 24 hours after  # Step 1
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- sapply(Dat[,3],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
Dat[3,3]<- NA
Dat[51,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- sapply(Dat[,3],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
?sapply
# Scenario 1: if there is an NA then take the average of the net movement 24 hours prior and 24 hours after  # Step 1
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- lapply(Dat[,3],function(x)  # Works if there is only one NA value in the data set.
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
#Scenario 2: if there are NA values in 24hrs before or after the missing hour.
#             take the un-adjusted daily count and add in an adjustement for the missing hours E.adj = E.unadj + (E.unadj * z/24hrs)     # Step 2
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
Dat[3,3]<- NA
Dat[51,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- lapply(Dat[,3],function(x)  # Works if there is only one NA value in the data set.
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
# Scenario 1: if there is an NA then take the average of the net movement 24 hours prior and 24 hours after  # Step 1
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- sapply(Dat[,3],function(x)  # Works if there is only one NA value in the data set.
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
#Scenario 2: if there are NA values in 24hrs before or after the missing hour.
#             take the un-adjusted daily count and add in an adjustement for the missing hours E.adj = E.unadj + (E.unadj * z/24hrs)     # Step 2
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
Dat[3,3]<- NA
Dat[51,3]<- NA
# Basic function that will fill in missing NA values with the average of the value 24hrs before and after the missing
Dat$new.net<- sapply(Dat[,3],function(x)  # Works if there is only one NA value in the data set.
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
# Accounting for single hours down
Dat$new.Net<- sapply(Dat[,'Net'],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
# Accounting for single hours down
Dat$new.Net<- sapply(Dat[,3],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day4<- rep(4,24)
Day5<- rep(5,24)
Day6<- rep(6,24)
Day<- c(Day1,Day2,Day3,Day4,Day5,Day6)
Hour<- rep(1:24,6)
Month<- rep(1,length(Day))
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Month= Month, Day= Day,Hour= Hour,Net= Net)
Dat[27,4]<- NA
Dat[3,4]<- NA
Dat[49:96,4]<- NA
# Accounting for single hours down
Dat$new.Net<- sapply(Dat[,4],function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
?apply
set.seed(1)
#Data Creation
Day1<- rep(1,24)
Day2<- rep(2,24)
Day3<- rep(3,24)
Day<- c(Day1,Day2,Day3)
Hour<- rep(1:24,3)
Net <- round(rnorm(length(Day),mean = 2))
Dat<- data.frame(Day= Day,Hour= Hour,Net= Net)
Dat[27,3]<- NA
View(Dat)
apply(Dat[,3],1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
apply(Dat,1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
Dat$new.net<- apply(Dat,1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
apply(Dat,1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
View(Dat)
Dat$new.net<- apply(Dat[,3],1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
Dat$new.net<- apply(Dat[,3],1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
apply(Dat[,3],1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
apply(Dat,1,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
apply(Dat[,3],1:2,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
apply(Dat[,3],2,function(x)
if_else(is.na(x), mean(c(Dat[which(is.na(Dat),arr.ind = T)[1]-24,3],Dat[which(is.na(Dat),arr.ind = T)[1]+24,3])),x))
