length(tmp[x,2:6 < 40])
z <- array(1:24, dim = 2:4)
zseq <- apply(z, 1:2, function(x) seq_len(max(x)))
View(zseq)
z <- array(1:24, dim = 2:4)
z
z <- array(1:24, dim = 2:4)
zseq <- apply(z, 1:2, function(x) seq_len(max(x)))
zseq         ## a 2 x 3 matrix
z
library(tidyverse)
library(lubridate)
library(dataRetrieval)
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp,1,function(x){
length(tmp[x,2:6 < 40])
}
)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp,1,function(x){
length(x[,2:6 < 40])
}
)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp,1,function(x){
length(x[,2:6 < 40])
}
)
tmp[1]
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[1],1,function(x){
length(tmp[,2:6 < 40])
}
)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[1],1,function(x){
length(tmp[x,2:6 < 40])
}
)
apply(tmp[1],1,function(x){
length(tmp[x,2:6 < 40])
}
)
tmp[2:3]
View(tmp)
tmp[2:6]
length(tmp < 40)
apply(tmp[2:6],1,function(x){
length(tmp < 40)
}
)
apply(tmp[2:6],1,function(x){
length(tmp[2:6] < 40)
}
)
length(tmp[2:6] < 40)
tmp[2:6] < 40
tmp[2:6] < 40
length(tmp[2:6] < 40)
length(tmp[2:6] < 40,na.omit = T)
length(tmp[2:6] < 40,na.omit = T)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
sum(x < 40)
}
)
sum(x < 40,na.rm = T)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
View(tmp)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,39,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
z<- sum(x < 40,na.rm = T)
tmp[1]-z
}
)
tmp[1]-z
rm(z)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
z<- sum(x < 40,na.rm = T)
tmp[1]-z
}
)
tmp[1]
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
tmp1<- apply(tmp[2:6],1,function(x){
z<- sum(x < 40,na.rm = T)
tmp[1]-z
}
)
View(tmp1)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
z<- sum(x < 40,na.rm = T)
}
)
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){
tmp[1] -sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
apply(tmp[2:6],1,function(x){
x[1] - sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
apply(tmp[2:6],1,function(x){
x[1] - sum(x < 40,na.rm = T)
}
)
sum(x < 40,na.rm = T)
# Identify how to make the code subtract the resulting value from the
apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp[1] - z
tmp[1]<- tmp[1] - z
View(tmp)
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
up.tmp<- tmp[1] - z
View(up.tmp)
tmp[1]
tmp<-tmp[1]<- tmp[1] - z
View(tmp)
tmp[1]
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp<-tmp[1]<- tmp[1] - z
View(tmp)
tmp<-tmp[1,]<- tmp[1] - z
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp[1,]<- tmp[1] - z
tmp[1,]<- tmp[1] - z
tmp[1] - z
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
View(tmp)
tmp[1] - z
tmp[1,]<- tmp[1] - z
tmp[1,]
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp[,1]<- tmp[1] - z
View(tmp)
apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
tmp[,1]<- tmp[1] - z
print(tmp)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp[,1]<- tmp[1] - z
tmp[,1]<- tmp[1] - z
View(tmp)
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp[,1]<- tmp[1] - z
View(tmp)
tmp$cor.count<- tmp[1] - z
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
z<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
tmp$cor.count<- tmp[1] - z
View(tmp)
View(up.tmp)
View(tmp)
tmp$cor.count
tmp[1] - z
tmp[,1]
tmp$cor.count<- tmp[,1] - z
View(tmp)
# Identify how to make the code subtract the resulting value from the
tmp$less.30<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
View(tmp)
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
# Try to remove the counts of fish < 40cm based on the number of columns that contain those values
tmp<- matrix(c(4,37,45, 40,34,NA,
5,37,45, 40,34,NA,
6,37,45, 40,45,32 ) ,nrow = 3, ncol = 6,byrow = T)
tmp<- as.data.frame(tmp)
names(tmp)<- c("count", "size1","size2","size3","size4","size5")
# In essence this is what I want to accomplish. Apply a function that looks at a row and finds the number of observations in columns 2:6 that are less than 40.
# Then I need the function to subtract the resulting value from the first column in the row.
apply(tmp[2:6],1,function(x){   # This code works to identify the number of variables in each row that are less than 40.
sum(x < 40,na.rm = T)
}
)
# Identify how to make the code subtract the resulting value from the
tmp$lessthan40<- apply(tmp[2:6],1,function(x){
sum(x < 40,na.rm = T)
}
)
View(tmp)
tmp<- tmp %>%
mutate(corrected.count = count - lessthan40)
View(tmp)
View(Data)
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
Data$lessthan40<- apply(Data[8:27],1,function(x){
sum(x < 40,na.rm = T)
}
)
Data<- Data %>%
mutate(corrected.count = count - lessthan40)
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
Data$lessthan40<- apply(Data[8:27],1,function(x){
sum(x < 40,na.rm = T)
}
)
View(Data)
#Read in review data and add Date
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
Data$lessthan40<- apply(Data[8:27],1,function(x){
sum(x < 40,na.rm = T)
}
)
View(Data)
Data<- Data %>%
mutate(corrected.count = Net - lessthan40)
View(Data)
Data<- as.data.frame(readxl::read_xlsx("E:/CalTrout/SF_Eel_Didson/Review Data/Review_Data-01-13-23.xlsx"))
Data<- Data %>%
mutate(Hnet = Net * 6) %>%
mutate(Date = paste(Year,Month,Day,Hour, sep = "-")) %>%
mutate(Date = ymd_h(Date))
Data$lessthan40<- apply(Data[8:27],1,function(x){
sum(x < 40,na.rm = T)
}
)
Data<- Data %>%
mutate(Net.corrected = Net - lessthan40)
View(Data)
# Obtain USGS data for site of interest. URL to helpful page: https://waterdata.usgs.gov/blog/dataretrieval/
siteNo<- "11476500" # location code for Miranda
pCode <- "00060"  # Data type: Discharge
start.date <- "2022-10-31"
end.date <- as.character(today())
Miranda <- readNWISuv(siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date)
Miranda<- renameNWISColumns(Miranda)
#Join the Review data and USGS flow data
names(Data)
names(Miranda)
Data<- left_join(Data,Miranda, by = c("Date" = "dateTime"))
Data<-Data %>%
group_by(Month,Day) %>%
mutate(Daily.count = sum(Hnet,na.rm = T), Monthly.count = sum(Daily.count,na.rm = T))
#Plot the two variables
scale.factor<- 10
# function to scale the axis automatically
max_first  <- max(Data$Daily.count)   # Specify max of first y axis
max_second <- max(Data$Flow_Inst) # Specify max of second y axis
min_first  <- min(Data$Daily.count)   # Specify min of first y axis
min_second <- min(Data$Flow_Inst) # Specify min of second y axis
# scale and shift variables calculated based on desired mins and maxes
scale = (max_second - min_second)/(max_first - min_first)
shift = min_first - min_second
# Function to scale secondary axis
scale_function <- function(x, scale, shift){
return ((x)*scale - shift)
}
# Function to scale secondary variable values
inv_scale_function <- function(x, scale, shift){
return ((x + shift)/scale)
}
plot <- Data %>%
#filter(Month == 11) %>%
ggplot(aes(x = Date, y = Daily.count)) +
geom_point() +
geom_line(aes(y = inv_scale_function(Flow_Inst, scale, shift))) +
scale_y_continuous(limits = c(min_first, max_first), sec.axis = sec_axis(~scale_function(., scale, shift)))
plot
